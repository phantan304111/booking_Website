{"ast":null,"code":"var _jsxFileName = \"E:\\\\Funix\\\\NodeJs\\\\Tanpnm_NJS_Assignment2\\\\Front_End\\\\src\\\\components\\\\Review\\\\Review.js\",\n    _s = $RefreshSig$();\n\n//import thu vien\nimport React from \"react\";\nimport \"./Review.css\";\nimport ReviewCity from \"./ReviewCity\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport useHttpRequest from \"../../hookcostun/httpRequest\";\nimport image from \"../../City Image/images\";\nimport ReviewHotel from \"./ReviewHotel\";\nimport ReviewType from \"./ReviewType\"; //Tao component review voi 3 phan - review city, review type va review hotel\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Type_Data = [{\n  \"name\": \"Hotels\",\n  \"count\": 233,\n  \"image\": \"./images/type_1.webp\"\n}, {\n  \"name\": \"Apartments\",\n  \"count\": 2331,\n  \"image\": \"./images/type_2.jpg\"\n}, {\n  \"name\": \"Resorts\",\n  \"count\": 2331,\n  \"image\": \"./images/type_3.jpg\"\n}, {\n  \"name\": \"Villas\",\n  \"count\": 2331,\n  \"image\": \"./images/type_4.jpg\"\n}, {\n  \"name\": \"Cabins\",\n  \"count\": 2331,\n  \"image\": \"./images/type_5.jpg\"\n}];\n\nconst Review = props => {\n  _s();\n\n  let countDN = 0;\n  let countHN = 0;\n  let countHCM = 0;\n  let countHotel = 0;\n  let countApartment = 0;\n  let countResort = 0;\n  let countVilla = 0;\n  let countCabin = 0;\n  const [data, setData] = useState();\n  const [City_Data, setCityData] = useState([]);\n  const [Type_Data, setTypeData] = useState([]);\n  const [Hotel_Data, setHotelData] = useState([]);\n  const hotelData = useCallback(async () => {\n    try {\n      const result = await fetch(`http://localhost:4000`);\n      const list = await result.json(); // console.log(list.results);  \n\n      setData(list.results);\n    } catch (err) {\n      throw Error(err);\n    }\n  }, []); // useHttpRequest()\n\n  useEffect(() => {\n    hotelData();\n  }, [hotelData]);\n  useEffect(() => {\n    if (data) {\n      data.map(hotel => {\n        if (hotel.city === \"Ha Noi\") countHN++;else if (hotel.city === \"Ho Chi Minh\") countHCM++;else if (hotel.city === \"Da Nang\") countDN++;\n      });\n      data.map(hotel => {\n        if (hotel.type === \"hotel\") countHotel++;else if (hotel.type === \"apartment\") countApartment++;else if (hotel.type === \"resort\") countResort++;else if (hotel.type === \"villa\") countVilla++;else if (hotel.type === \"cabin\") countCabin++;\n      });\n      console.log(data); // E:\\Funix\\NodeJs\\Tanpnm_NJS_Assignment2\\Front_End\\src\\City Image\\Da Nang.jpg\n\n      setCityData([{\n        \"name\": \"Ha Noi\",\n        \"subText\": `${countHN} properties`,\n        \"image\": \"./images/Ha Noi.jpg\"\n      }, {\n        \"name\": \"Ho Chi Minh\",\n        \"subText\": `${countHCM} properties`,\n        \"image\": \"./images/HCM.jpg\"\n      }, {\n        \"name\": \"Da Nang\",\n        \"subText\": `${countDN} properties`,\n        \"image\": \"./images/Da Nang.jpg\"\n      }]);\n      setTypeData([{\n        \"name\": \"Hotels\",\n        \"count\": `${countHotel}`,\n        \"image\": \"./images/type_1.webp\"\n      }, {\n        \"name\": \"Apartments\",\n        \"count\": `${countApartment}`,\n        \"image\": \"./images/type_2.jpg\"\n      }, {\n        \"name\": \"Resorts\",\n        \"count\": `${countResort}`,\n        \"image\": \"./images/type_3.jpg\"\n      }, {\n        \"name\": \"Villas\",\n        \"count\": `${countVilla}`,\n        \"image\": \"./images/type_4.jpg\"\n      }, {\n        \"name\": \"Cabins\",\n        \"count\": `${countCabin}`,\n        \"image\": \"./images/type_5.jpg\"\n      }]);\n      setHotelData(data);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Review\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Review_content\",\n      children: City_Data.map(expense =>\n      /*#__PURE__*/\n      // {data.map((expense) => (\n      // <NavBarItem/>\n      _jsxDEV(ReviewCity, {\n        name: expense.name,\n        subText: expense.subText,\n        image: expense.image\n      }, expense.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Review_content\",\n      children: \"Browse by property type \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Review_content\",\n      children: Type_Data.map(expense =>\n      /*#__PURE__*/\n      // <NavBarItem/>\n      _jsxDEV(ReviewType, {\n        name: expense.name,\n        count: expense.count,\n        image: expense.image\n      }, expense.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Review_content\",\n      children: \"Homes Guest Loves\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Review_content\",\n      children: Hotel_Data.map(expense => /*#__PURE__*/_jsxDEV(ReviewHotel, {\n        name: expense.name,\n        city: expense.city,\n        price: expense.cheapestPrice,\n        rate: expense.rating,\n        type: expense.type,\n        image_url: expense.photos[0]\n      }, expense.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Review, \"ImxrF0FTHP4nRWo8/vGTy7i1VD0=\");\n\n_c = Review;\nexport default Review;\n\nvar _c;\n\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"sources":["E:/Funix/NodeJs/Tanpnm_NJS_Assignment2/Front_End/src/components/Review/Review.js"],"names":["React","ReviewCity","useCallback","useEffect","useState","useHttpRequest","image","ReviewHotel","ReviewType","Type_Data","Review","props","countDN","countHN","countHCM","countHotel","countApartment","countResort","countVilla","countCabin","data","setData","City_Data","setCityData","setTypeData","Hotel_Data","setHotelData","hotelData","result","fetch","list","json","results","err","Error","map","hotel","city","type","console","log","expense","name","subText","count","cheapestPrice","rating","photos"],"mappings":"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","sourcesContent":["//import thu vien\r\nimport React from \"react\";\r\nimport \"./Review.css\";\r\nimport ReviewCity from \"./ReviewCity\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useHttpRequest from \"../../hookcostun/httpRequest\";\r\nimport image from  \"../../City Image/images\"\r\nimport ReviewHotel from \"./ReviewHotel\";\r\nimport ReviewType from \"./ReviewType\";\r\n//Tao component review voi 3 phan - review city, review type va review hotel\r\n\r\n\r\n\r\nconst Type_Data =[\r\n\t{\r\n\t\t\"name\": \"Hotels\",\r\n\t\t\"count\": 233,\r\n\t\t\"image\": \"./images/type_1.webp\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Apartments\",\r\n\t\t\"count\": 2331,\r\n\t\t\"image\": \"./images/type_2.jpg\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Resorts\",\r\n\t\t\"count\": 2331,\r\n\t\t\"image\": \"./images/type_3.jpg\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Villas\",\r\n\t\t\"count\": 2331,\r\n\t\t\"image\": \"./images/type_4.jpg\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Cabins\",\r\n\t\t\"count\": 2331,\r\n\t\t\"image\": \"./images/type_5.jpg\"\r\n\t}\r\n]\r\n\r\n\r\n\r\n  \r\nconst Review = (props) => {\r\n  let countDN = 0;\r\n  let countHN = 0;\r\n  let countHCM = 0;\r\n  \r\n  let countHotel = 0;\r\n  let countApartment = 0;\r\n  let countResort = 0;\r\n  let countVilla = 0;\r\n  let countCabin = 0;\r\n  \tconst [data, setData] = useState();\r\n\tconst [City_Data, setCityData] = useState([\r\n  ]);\r\n  const [Type_Data, setTypeData] = useState([]);\r\n  const [Hotel_Data, setHotelData] = useState([]);\r\n\r\n\r\n  const hotelData = useCallback(async () => {\r\n\t\ttry {\r\n      const result = await fetch(`http://localhost:4000`);\r\n      const list = await result.json();\r\n      // console.log(list.results);  \r\n      setData(list.results);\r\n    } catch(err){\r\n      throw Error(err);\r\n    }\r\n  }, []);\r\n\t// useHttpRequest()\r\n\r\n  useEffect(() => {\r\n    hotelData();\r\n  }, [hotelData]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      data.map((hotel) => {\r\n        if (hotel.city === \"Ha Noi\") countHN++;\r\n        else if (hotel.city === \"Ho Chi Minh\") countHCM++;\r\n        else if (hotel.city === \"Da Nang\") countDN++;\t\r\n      });\r\n      data.map((hotel) => {\r\n        if (hotel.type === \"hotel\") countHotel++;\r\n        else if (hotel.type === \"apartment\") countApartment++;\r\n        else if (hotel.type === \"resort\") countResort++;\t\r\n        else if (hotel.type === \"villa\") countVilla++;\t\r\n        else if (hotel.type === \"cabin\") countCabin++;\t\r\n      });\r\n      console.log(data);\r\n      // E:\\Funix\\NodeJs\\Tanpnm_NJS_Assignment2\\Front_End\\src\\City Image\\Da Nang.jpg\r\n      setCityData([\r\n        {\r\n          \"name\": \"Ha Noi\",\r\n          \"subText\": `${countHN} properties`,\r\n          \"image\": \"./images/Ha Noi.jpg\"\r\n        },\r\n        {\r\n          \"name\": \"Ho Chi Minh\",\r\n          \"subText\": `${countHCM} properties`,\r\n          \"image\": \"./images/HCM.jpg\"\r\n        },\r\n        {\r\n          \"name\": \"Da Nang\",\r\n          \"subText\": `${countDN} properties`,\r\n          \"image\": \"./images/Da Nang.jpg\"\r\n        }\r\n      ]);\r\n      setTypeData([{\r\n        \"name\": \"Hotels\",\r\n        \"count\": `${countHotel}`,\r\n        \"image\": \"./images/type_1.webp\"\r\n      },\r\n      {\r\n        \"name\": \"Apartments\",\r\n        \"count\": `${countApartment}`,\r\n        \"image\": \"./images/type_2.jpg\"\r\n      },\r\n      {\r\n        \"name\": \"Resorts\",\r\n        \"count\": `${countResort}`,\r\n        \"image\": \"./images/type_3.jpg\"\r\n      },\r\n      {\r\n        \"name\": \"Villas\",\r\n        \"count\": `${countVilla}`,\r\n        \"image\": \"./images/type_4.jpg\"\r\n      },\r\n      {\r\n        \"name\": \"Cabins\",\r\n        \"count\": `${countCabin}`,\r\n        \"image\": \"./images/type_5.jpg\"\r\n      }]);\r\n      setHotelData(data)\r\n    }\r\n  }, [data]);\r\n\r\n\r\n\r\n  return (\r\n    <div className='Review'>\r\n      {/* Div review city, tao layout flex voi moi phan tu la mot phan tu city trong data */}\r\n      <div className='Review_content'>\r\n        {City_Data.map((expense) => (\r\n        // {data.map((expense) => (\r\n          // <NavBarItem/>\r\n          <ReviewCity\r\n            key={expense.name}\r\n            name={expense.name}\r\n            subText={expense.subText}\r\n            image={expense.image}\r\n          />\r\n        ))}\r\n      </div>\r\n      <h3 className='Review_content'>Browse by property type </h3>\r\n      {/* Div review type, tao layout flex voi moi phan tu la mot phan tu type trong data */}\r\n      <div className='Review_content'>\r\n        {Type_Data.map((expense) => (\r\n          // <NavBarItem/>\r\n          <ReviewType\r\n            key={expense.name}\r\n            name={expense.name}\r\n            count={expense.count}\r\n            image={expense.image}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <h3 className='Review_content'>Homes Guest Loves</h3>\r\n      {/* Div review hotel, tao layout flex voi moi phan tu la mot phan tu hotel trong data */}\r\n      <div className='Review_content'>\r\n        {Hotel_Data.map((expense) => (\r\n          <ReviewHotel\r\n            key={expense.name}\r\n            name={expense.name}\r\n            city={expense.city}\r\n            price={expense.cheapestPrice}\r\n            rate={expense.rating}\r\n            type={expense.type}\r\n            image_url={expense.photos[0]}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Review;\r\n"]},"metadata":{},"sourceType":"module"}